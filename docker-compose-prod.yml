version: '3'

services:

  sanjeev-express:
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile.prod
      args:
        NODE_ENV: production
    ports:
      - ${REACT_APP__EXPRESS_API_PORT}:3001
    volumes:
      - ./server:/app
      - /app/node_modules
    environment:
      - INTERNAL_PORT=3001
      - NODE_ENV=production
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - SESSION_SECRET=${SESSION_SECRET}
      - MY_VARIABLE="MY_VARIABLE = i set this thing"
    command: node server.js
    depends_on:
      - mongo
    networks:
      - sanjeev-docker-net

  mongo:
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./db/mongo-db:/data/db
    networks:
      - sanjeev-docker-net

  redis:
    image: redis
    networks:
      - sanjeev-docker-net

  # nginx:
  #   restart: always
  #   depends_on:
  #     - sanjeev-express
  #     - client
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - 4012:80
  #   networks:
  #     - sanjeev-docker-net

  client:
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - ${CLIENT_EXTERNAL_PORT}:80
    environment:
      - EXPRESS_API_IP=${EXPRESS_API_IP}
      - EXPRESS_API_PORT=${REACT_APP__EXPRESS_API_PORT}
    depends_on:
      - sanjeev-express
    networks:
      - sanjeev-docker-net

networks:
  sanjeev-docker-net:
    driver: bridge

volumes:
  mongo-db:
